3.2.1 (Media Mark)
2e1b4fc6b400e5bc513e2309a9d4d454e8ce2abc
o:Sass::Tree::RootNode
:
@linei:@template"Ü// ---------------------------------------------------------------------------
// Imports

@import "compass/utilities/general/clearfix";
@import "compass/css3/box-sizing";

// ---------------------------------------------------------------------------
// Border-Box Sizing

// Apply the border-box sizing model to all elements
// and adjust the grid math appropriately.
@mixin border-box-sizing {
  $border-box-sizing: true;
  * { @include box-sizing(border-box); }
}

// ---------------------------------------------------------------------------
// Container

// Set the width of a container
//
//  $columns  : The number of columns in the Grid Layout.
@mixin set-container-width(
  $columns  : $total-columns
){
  $width: container-outer-width($columns);

  @if $container-style == 'static' {
    width: $width;
  } @else {
    @if $container-style == 'fluid' {
      width: if(unit($width) == '%', $width, auto);
    } @else {
      max-width: $width;
      @if $legacy-support-for-ie6 { _width: $width; }
    }
  }
}

// Set the outer grid-containing element(s).
//
//  $columns  : The number of columns in the container.
@mixin apply-container(
  $columns  : $total-columns
){
  @include pie-clearfix;
  @include set-container-width($columns);
  margin: { left: auto; right: auto; }
  padding: { left: $grid-padding; right: $grid-padding; }
}

// Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
//
// $media-layout-1        : [default:$total-columns] A list of values including -
//                        : One unitless number (representing columns in a layout)
//                        : Two optional lengths (representing min and max-width media-query breakpoints).
// $media-layout-2 ...-10 : [optional] Same as $media-layout-1
@mixin container(
  $media-layout-1   : $total-columns,
  $media-layout-2   : false,
  $media-layout-3   : false,
  $media-layout-4   : false,
  $media-layout-5   : false,
  $media-layout-6   : false,
  $media-layout-7   : false,
  $media-layout-8   : false,
  $media-layout-9   : false,
  $media-layout-10  : false
){
  $media-layouts    : compact($media-layout-2,$media-layout-3,$media-layout-4,$media-layout-5,$media-layout-6,$media-layout-7,$media-layout-8,$media-layout-9,$media-layout-10);

  @if is-default-layout($media-layout-1) {
    @include apply-container();
  } @else {
    @include at-breakpoint($media-layout-1) {
      @include apply-container();
    }
  }

  @each $ml in $media-layouts {
    @if $ml {
      @include at-breakpoint($ml) {
        @include set-container-width;
      }
    }
  }
}

// ---------------------------------------------------------------------------
// Columns

// Create a grid element spanning any number of 'columns' in a grid 'context'.
// $columns : The number of columns to span.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $padding : [optional] Padding applied to the inside of individual grid columns.
//          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
//          : Padding values are applied only on the horizontal axis in from-to order
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)

@mixin span-columns(
  $columns,
  $context       : $total-columns,
  $padding       : false,
  $from          : $from-direction
) {
  $to       : opposite-position($from);
  $pos      : split-columns-value($columns,position);
  $cols     : split-columns-value($columns,columns);
  $pad-from : relative-width(0 * $gutter-width, $context);
  $pad-to   : relative-width(0 * $gutter-width, $context);

  @if $padding != false {
    $pad-from : nth($padding, 1);

    @if length($padding) > 1 {
      $pad-to: nth($padding, 2);
    } @else {
      $pad-to: $pad-from;
    }

    $pad-from : relative-width($pad-from, $context);
    $pad-to   : relative-width($pad-to, $context);

    padding-#{$from}: $pad-from;
    padding-#{$to}: $pad-to;
  }

  width: columns($cols, $context) - if($border-box-sizing, 0, $pad-to + $pad-from);

  @if ($pos == 'omega') {
    @include omega($from);
  } @else {
    float: $from;
    margin-#{$to}: gutter($context);
    @if $legacy-support-for-ie6 {
      display: inline;
    }
  }
}

// Apply to elements spanning the last column, to account for the page edge.
// Only needed as an override. Normally 'omega' can just be called by `columns`.
//
// $from    : The start-direction for your document.
@mixin omega(
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $omega-float;
  margin-#{$to}: 0;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: - $gutter-width;
    @if $legacy-support-for-ie6 { display: inline; }
  }
}

// Shortcut to apply omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $from      : The start-direction for your document.
@mixin nth-omega(
  $n        : last,
  $selector : child,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include omega($from); }
  }
}

// ---------------------------------------------------------------------------
// Resets

// Reset a '+columns' grid element to default block behavior
//
// $from  : The start direction of your layout (e.g. 'left' for ltr languages)
@mixin reset-columns(
  $from: $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: none;
  width: auto;
  margin-#{$to}: auto;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
    @if $legacy-support-for-ie6 { display: block; }
  }
}

// Apply to elements previously set as omega.
// This will return floats and margins back to non-omega settigns.
//
// $context : [optional] The context (columns spanned by parent).
// $from    : The start-direction for your document.
@mixin remove-omega(
  $context  : $total-columns,
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $from;
  margin-#{$to}: gutter($context);

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
  }
}

// Shortcut to apply remove-omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $context   : [optional] The context (columns spanned by parent).
// $from      : The start-direction for your document.
@mixin remove-nth-omega(
  $n        : last,
  $selector : child,
  $context  : $total-columns,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include remove-omega($context,$from); }
  }
}

// ---------------------------------------------------------------------------
// Change Settings

@mixin with-grid-settings(
  $columns: $total-columns,
  $width: $column-width,
  $gutter: $gutter-width,
  $padding: $grid-padding
) {
  // keep the defaults around
  $default-columns: $total-columns;
  $default-width: $column-width;
  $default-gutter: $gutter-width;
  $default-padding: $grid-padding;

  // use the new settings
  $total-columns: $columns;
  $column-width: $width;
  $gutter-width: $gutter;
  $grid-padding: $padding;

  // apply to contents
  @content;

  // re-instate the defaults
  $total-columns: $default-columns;
  $column-width: $default-width;
  $gutter-width: $default-gutter;
  $grid-padding: $default-padding;
}
:@has_childrenT:@options{ :@children["o:Sass::Tree::CommentNode
:
@type:silent;i;	@;
[ :@value["a/* ---------------------------------------------------------------------------
 * Imports */o:Sass::Tree::ImportNode
;i	;0:@imported_filename"'compass/utilities/general/clearfix;	@;
[ o;
;i
;0;"compass/css3/box-sizing;	@;
[ o;
;;;i;	@;
[ ;["k/* ---------------------------------------------------------------------------
 * Border-Box Sizing */o;
;;;i;	@;
[ ;["g/* Apply the border-box sizing model to all elements
 * and adjust the grid math appropriately. */o:Sass::Tree::MixinDefNode:
@name"border-box-sizing;i;T;	@;
[o:Sass::Tree::VariableNode:@guarded0;"border-box-sizing;i:
@expro:Sass::Script::Bool;i;	@;T;	@;
[ o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@$;i:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Universal;@$;i:@namespace0;i;T;	@:
@tabsi ;
[o:Sass::Tree::MixinNode;"box-sizing;i:@keywords{ ;	@;
[ :@splat0:
@args[o:Sass::Script::String	;:identifier;i;	@;"border-box:
@rule["*;'0;([ o;
;;;i;	@;
[ ;["c/* ---------------------------------------------------------------------------
 * Container */o;
;;;i;	@;
[ ;["d/* Set the width of a container
 *
 *  $columns  : The number of columns in the Grid Layout. */o;;"set-container-width;i;T;	@;
[o;;0;"
width;i;o:Sass::Script::Funcall;"container-outer-width;i;&{ ;	@;'0;([o:Sass::Script::Variable	;"columns;i:@underscored_name"columns;	@;	@;
[ u:Sass::Tree::IfNodeÆ[o:Sass::Script::Operation
:
@linei!:@operand2o:Sass::Script::String	:
@type:string;i!:@options{ :@value"static:@operand1o:Sass::Script::Variable	:
@name"container-style;i!:@underscored_name"container_style;@;@:@operator:equ:Sass::Tree::IfNodeB[00[u:Sass::Tree::IfNode"[o:Sass::Script::Operation
:
@linei$:@operand2o:Sass::Script::String	:
@type:string;i$:@options{ :@value"
fluid:@operand1o:Sass::Script::Variable	:
@name"container-style;i$:@underscored_name"container_style;@;@:@operator:equ:Sass::Tree::IfNodeÑ[00[o:Sass::Tree::PropNode:
@name["max-width:
@linei':@options{ :
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::Variable	;"
width;i':@underscored_name"
width;@
u:Sass::Tree::IfNodeû[o:Sass::Script::Variable	:
@name"legacy-support-for-ie6:
@linei(:@underscored_name"legacy_support_for_ie6:@options{ 0[o:Sass::Tree::PropNode;["_width;i(;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"
width;i(;"
width;	@	[o:Sass::Tree::PropNode;["
width;i%;@:
@tabsi :@children[ :@prop_syntax:new;o:Sass::Script::Funcall;"if;i%:@keywords{ ;@:@splat0:
@args[o; 
;i%;o;	;	;
;i%;@;"%;o;;"	unit;i%;{ ;@;0;[o;	;"
width;i%;"
width;@;@;;o;	;"
width;i%;"
width;@o;	;	:identifier;i%;@;"	auto[o:Sass::Tree::PropNode;["
width;i";@:
@tabsi :@children[ :@prop_syntax:new;o;	;"
width;i";"
width;@;'0;([[o;-;"columns;."columns;	@o;-	;"total-columns;i;."total_columns;	@o;
;;;i-;	@;
[ ;["o/* Set the outer grid-containing element(s).
 *
 *  $columns  : The number of columns in the container. */o;;"apply-container;i2;T;	@;
[	o;%;"pie-clearfix;i3;&{ ;	@;
[ ;'0;([ o;%;"set-container-width;i4;&{ ;	@;
[ ;'0;([o;-	;"columns;i4;."columns;	@o:Sass::Tree::PropNode;["margin;i5;T;	@;$i ;
[o;0;["	left;i5;	@;$i ;
[ :@prop_syntax:new;o;);;*;	@;"	autoo;0;["
right;i5;	@;$i ;
[ ;1;2;o;);;*;	@;"	auto;1;2;o;);;*;	@;" o;0;["padding;i6;T;	@;$i ;
[o;0;["	left;i6;	@;$i ;
[ ;1;2;o;-	;"grid-padding;i6;."grid_padding;	@o;0;["
right;i6;	@;$i ;
[ ;1;2;o;-	;"grid-padding;i6;."grid_padding;	@;1;2;o;);;*;	@;" ;'0;([[o;-;"columns;."columns;	@o;-	;"total-columns;i1;."total_columns;	@o;
;;;i9;	@;
[ ;["¶/* Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
 *
 * $media-layout-1        : [default:$total-columns] A list of values including -
 *                        : One unitless number (representing columns in a layout)
 *                        : Two optional lengths (representing min and max-width media-query breakpoints).
 * $media-layout-2 ...-10 : [optional] Same as $media-layout-1 */o;;"container;iJ;T;	@;
[o;;0;"media-layouts;iK;o;,;"compact;iK;&{ ;	@;'0;([o;-	;"media-layout-2;iK;."media_layout_2;	@o;-	;"media-layout-3;iK;."media_layout_3;	@o;-	;"media-layout-4;iK;."media_layout_4;	@o;-	;"media-layout-5;iK;."media_layout_5;	@o;-	;"media-layout-6;iK;."media_layout_6;	@o;-	;"media-layout-7;iK;."media_layout_7;	@o;-	;"media-layout-8;iK;."media_layout_8;	@o;-	;"media-layout-9;iK;."media_layout_9;	@o;-	;"media-layout-10;iK;."media_layout_10;	@;	@;
[ u;/5[o:Sass::Script::Funcall:
@name"is-default-layout:
@lineiM:@keywords{ :@options{ :@splat0:
@args[o:Sass::Script::Variable	;"media-layout-1;iM:@underscored_name"media_layout_1;	@	u:Sass::Tree::IfNode[00[o:Sass::Tree::MixinNode:
@name"at-breakpoint:
@lineiP:@keywords{ :@has_childrenT:@options{ :@children[o; ;"apply-container;iQ;{ ;
@
;[ :@splat0:
@args[ ;0;[o:Sass::Script::Variable	;"media-layout-1;iP:@underscored_name"media_layout_1;
@
[o:Sass::Tree::MixinNode;"apply-container;iN;{ ;	@	:@children[ ;
0;[ o:Sass::Tree::EachNode;iU;T;	@:	@var"ml;
[u;/[o:Sass::Script::Variable	:
@name"ml:
@lineiV:@underscored_name"ml:@options{ 0[o:Sass::Tree::MixinNode;"at-breakpoint;iW:@keywords{ :@has_childrenT;	@	:@children[o;
;"set-container-width;iX;{ ;	@	;[ :@splat0:
@args[ ;0;[o; 	;"ml;iW;"ml;	@	:
@listo;-	;"media-layouts;iU;."media_layouts;	@;'0;([[o;-;"media-layout-1;."media_layout_1;	@o;-	;"total-columns;i@;."total_columns;	@[o;-;"media-layout-2;."media_layout_2;	@o;;iA;	@;F[o;-;"media-layout-3;."media_layout_3;	@o;;iB;	@;F[o;-;"media-layout-4;."media_layout_4;	@o;;iC;	@;F[o;-;"media-layout-5;."media_layout_5;	@o;;iD;	@;F[o;-;"media-layout-6;."media_layout_6;	@o;;iE;	@;F[o;-;"media-layout-7;."media_layout_7;	@o;;iF;	@;F[o;-;"media-layout-8;."media_layout_8;	@o;;iG;	@;F[o;-;"media-layout-9;."media_layout_9;	@o;;iH;	@;F[o;-;"media-layout-10;."media_layout_10;	@o;;iI;	@;Fo;
;;;i^;	@;
[ ;["a/* ---------------------------------------------------------------------------
 * Columns */o;
;;;ia;	@;
[ ;["/* Create a grid element spanning any number of 'columns' in a grid 'context'.
 * $columns : The number of columns to span.
 * $context : [optional] The context (columns spanned by parent).
 *          : Context is required on any nested elements.
 *          : Context MUST NOT be declared on a root element.
 * $padding : [optional] Padding applied to the inside of individual grid columns.
 *          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
 *          : Padding values are applied only on the horizontal axis in from-to order
 * $from    : The start direction of your layout (e.g. 'left' for ltr languages) */o;;"span-columns;ip;T;	@;
[o;;0;"to;iq;o;,;"opposite-position;iq;&{ ;	@;'0;([o;-	;"	from;iq;."	from;	@;	@;
[ o;;0;"pos;ir;o;,;"split-columns-value;ir;&{ ;	@;'0;([o;-	;"columns;ir;."columns;	@o;)	;;*;ir;	@;"position;	@;
[ o;;0;"	cols;is;o;,;"split-columns-value;is;&{ ;	@;'0;([o;-	;"columns;is;."columns;	@o;)	;;*;is;	@;"columns;	@;
[ o;;0;"pad-from;it;o;,;"relative-width;it;&{ ;	@;'0;([o:Sass::Script::Operation
;it:@operand2o;-	;"gutter-width;it;."gutter_width;	@:@operand1o:Sass::Script::Number:@original"0;it;	@:@denominator_units[ ;i :@numerator_units[ ;	@:@operator:
timeso;-	;"context;it;."context;	@;	@;
[ o;;0;"pad-to;iu;o;,;"relative-width;iu;&{ ;	@;'0;([o;6
;iu;7o;-	;"gutter-width;iu;."gutter_width;	@;8o;9;:"0;iu;	@;;@2;i ;<[ ;	@;=;>o;-	;"context;iu;."context;	@;	@;
[ u;/Þ[o:Sass::Script::Operation
:
@lineiw:@operand2o:Sass::Script::Bool;iw:@options{ :@valueF:@operand1o:Sass::Script::Variable	:
@name"padding;iw:@underscored_name"padding;	@;	@:@operator:neq0[o:Sass::Tree::VariableNode:@guarded0;"pad-from;ix:
@expro:Sass::Script::Funcall;"nth;ix:@keywords{ ;	@:@splat0:
@args[o;	;"padding;ix;"padding;	@o:Sass::Script::Number:@original"1;ix;	@:@denominator_units[ ;
i:@numerator_units[ ;	@:@children[ u:Sass::Tree::IfNodeÈ[o:Sass::Script::Operation
:
@lineiz:@operand2o:Sass::Script::Number:@original"1;iz:@options{ :@denominator_units[ :@valuei:@numerator_units[ :@operand1o:Sass::Script::Funcall:
@name"length;iz:@keywords{ ;
@	:@splat0:
@args[o:Sass::Script::Variable	;"padding;iz:@underscored_name"padding;
@	;
@	:@operator:gtu:Sass::Tree::IfNode²[00[o:Sass::Tree::VariableNode:@guarded0:
@name"pad-to:
@linei}:
@expro:Sass::Script::Variable	;"pad-from;i}:@underscored_name"pad_from:@options{ ;@:@children[ [o:Sass::Tree::VariableNode:@guarded0;"pad-to;i{:
@expro;;"nth;i{;{ ;
@	;0;[o;	;"padding;i{;"padding;
@	o;;	"2;i{;
@	;@
;i;[ ;
@	:@children[ o;;0;"pad-from;i{;o;;"relative-width;i{;{ ;	@;0;[o;	;"pad-from;i{;"pad_from;	@o;	;"context;i{;"context;	@;	@;[ o;;0;"pad-to;i|;o;;"relative-width;i|;{ ;	@;0;[o;	;"pad-to;i|;"pad_to;	@o;	;"context;i|;"context;	@;	@;[ o:Sass::Tree::PropNode;["padding-o;	;"	from;i~;"	from;	@;i~;	@:
@tabsi ;[ :@prop_syntax:new;
o;	;"pad-from;i~;"pad_from;	@o;;["padding-o;	;"to;i;"to;	@;i;	@;i ;[ ; ;!;
o;	;"pad-to;i;"pad_to;	@o;0;["
width;i;	@;$i ;
[ ;1;2;o;6
;i;7o;,;"if;i;&{ ;	@;'0;([o;-	;"border-box-sizing;i;."border_box_sizing;	@o;9;:"0;i;	@;;@2;i ;<[ o;6
;i;7o;-	;"pad-from;i;."pad_from;	@;8o;-	;"pad-to;i;."pad_to;	@;	@;=:	plus;8o;,;"columns;i;&{ ;	@;'0;([o;-	;"	cols;i;."	cols;	@o;-	;"context;i;."context;	@;	@;=:
minusu;/	[o:Sass::Script::Operation
:
@linei:@operand2o:Sass::Script::String	:
@type:string;i:@options{ :@value"
omega:@operand1o:Sass::Script::Variable	:
@name"pos;i:@underscored_name"pos;@;@:@operator:equ:Sass::Tree::IfNode[00[o:Sass::Tree::PropNode:
@name["
float:
@linei:@options{ :
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::Variable	;"	from;i:@underscored_name"	from;@
o; ;["margin-o;	;"to;i;"to;@
;i;@
;	i ;
[ ;;;o:Sass::Script::Funcall;"gutter;i:@keywords{ ;@
:@splat0:
@args[o;	;"context;i;"context;@
u:Sass::Tree::IfNode[o:Sass::Script::Variable	:
@name"legacy-support-for-ie6:
@linei:@underscored_name"legacy_support_for_ie6:@options{ 0[o:Sass::Tree::PropNode;["display;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::String:
@type:identifier;	@	;"inline[o:Sass::Tree::MixinNode;"
omega;i:@keywords{ ;@:@children[ :@splat0:
@args[o;	;"	from;i;"	from;@;'0;([	[o;-;"columns;."columns;	@0[o;-;"context;."context;	@o;-	;"total-columns;im;."total_columns;	@[o;-;"padding;."padding;	@o;;in;	@;F[o;-;"	from;."	from;	@o;-	;"from-direction;io;."from_direction;	@o;
;;;i;	@;
[ ;["Ø/* Apply to elements spanning the last column, to account for the page edge.
 * Only needed as an override. Normally 'omega' can just be called by `columns`.
 *
 * $from    : The start-direction for your document. */o;;"
omega;i;T;	@;
[
o;;0;"to;i;o;,;"opposite-position;i;&{ ;	@;'0;([o;-	;"	from;i;."	from;	@;	@;
[ o;;0;"	hack;i;o;,;"opposite-position;i;&{ ;	@;'0;([o;-	;"omega-float;i;."omega_float;	@;	@;
[ o;0;["
float;i;	@;$i ;
[ ;1;2;o;-	;"omega-float;i;."omega_float;	@o;0;["margin-o;-	;"to;i;."to;	@;i;	@;$i ;
[ ;1;2;o;);;*;	@;"0u;/"[o:Sass::Script::Operation
:
@linei:@operand2o:Sass::Script::Variable	:
@name"legacy-support-for-ie7;i:@underscored_name"legacy_support_for_ie7:@options{ :@operand1o;	;	"legacy-support-for-ie6;i;
"legacy_support_for_ie6;@
;@
:@operator:or0[o:Sass::Tree::PropNode;	["#margin-o;	;	"	hack;i;
"	hack;@
;i;@
:
@tabsi :@children[ :@prop_syntax:new:@valueo:!Sass::Script::UnaryOperation	;i;@
:@operando;	;	"gutter-width;i;
"gutter_width;@
;:
minusu:Sass::Tree::IfNode[o:Sass::Script::Variable	:
@name"legacy-support-for-ie6:
@linei:@underscored_name"legacy_support_for_ie6:@options{ 0[o:Sass::Tree::PropNode;["display;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::String:
@type:identifier;	@	;"inline;'0;([[o;-;"	from;."	from;	@o;-	;"from-direction;i;."from_direction;	@o;
;;;i¢;	@;
[ ;["ë/* Shortcut to apply omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $from      : The start-direction for your document. */o;;"nth-omega;i«;T;	@;
[o;;0;"ie;i¬;o;,;"if;i¬;&{ ;	@;'0;([o;6
;i¬;7o;)	;:string;i¬;	@;"
first;8o;-	;"n;i¬;."n;	@;	@;=:eqo;;i¬;	@;To;;i¬;	@;F;	@;
[ o;%;"adjust-support-for;i­;&{"ie7o;-	;"ie;i­;."ie;	@"ie8o;-	;"ie;i­;."ie;	@"ie6o;-	;"ie;i­;."ie;	@;T;	@;
[o;;i®;T;	@;$i ;
[o;%;"
omega;i®;&{ ;	@;
[ ;'0;([o;-	;"	from;i®;."	from;	@;+["&:o;,;"format-nth;i®;&{ ;	@;'0;([o;-	;"n;i®;."n;	@o;-	;"selector;i®;."selector;	@;'0;([ ;'0;([[o;-;"n;."n;	@o;)	;;*;i¨;	@;"	last[o;-;"selector;."selector;	@o;)	;;*;i©;	@;"
child[o;-;"	from;."	from;	@o;-	;"from-direction;iª;."from_direction;	@o;
;;;i²;	@;
[ ;["`/* ---------------------------------------------------------------------------
 * Resets */o;
;;;iµ;	@;
[ ;["/* Reset a '+columns' grid element to default block behavior
 *
 * $from  : The start direction of your layout (e.g. 'left' for ltr languages) */o;;"reset-columns;iº;T;	@;
[o;;0;"to;i»;o;,;"opposite-position;i»;&{ ;	@;'0;([o;-	;"	from;i»;."	from;	@;	@;
[ o;;0;"	hack;i¼;o;,;"opposite-position;i¼;&{ ;	@;'0;([o;-	;"omega-float;i¼;."omega_float;	@;	@;
[ o;0;["
float;i¾;	@;$i ;
[ ;1;2;o;);;*;	@;"	noneo;0;["
width;i¿;	@;$i ;
[ ;1;2;o;);;*;	@;"	autoo;0;["margin-o;-	;"to;iÀ;."to;	@;iÀ;	@;$i ;
[ ;1;2;o;);;*;	@;"	autou;/ï[o:Sass::Script::Operation
:
@lineiÂ:@operand2o:Sass::Script::Variable	:
@name"legacy-support-for-ie7;iÂ:@underscored_name"legacy_support_for_ie7:@options{ :@operand1o;	;	"legacy-support-for-ie6;iÂ;
"legacy_support_for_ie6;@
;@
:@operator:or0[o:Sass::Tree::PropNode;	["#margin-o;	;	"	hack;iÃ;
"	hack;@
;iÃ;@
:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::String:
@type:identifier;@
;"	autou:Sass::Tree::IfNode[o:Sass::Script::Variable	:
@name"legacy-support-for-ie6:
@lineiÄ:@underscored_name"legacy_support_for_ie6:@options{ 0[o:Sass::Tree::PropNode;["display;iÄ;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::String:
@type:identifier;	@	;"
block;'0;([[o;-;"	from;."	from;	@o;-	;"from-direction;i¹;."from_direction;	@o;
;;;iÈ;	@;
[ ;["í/* Apply to elements previously set as omega.
 * This will return floats and margins back to non-omega settigns.
 *
 * $context : [optional] The context (columns spanned by parent).
 * $from    : The start-direction for your document. */o;;"remove-omega;iÐ;T;	@;
[
o;;0;"to;iÑ;o;,;"opposite-position;iÑ;&{ ;	@;'0;([o;-	;"	from;iÑ;."	from;	@;	@;
[ o;;0;"	hack;iÒ;o;,;"opposite-position;iÒ;&{ ;	@;'0;([o;-	;"omega-float;iÒ;."omega_float;	@;	@;
[ o;0;["
float;iÔ;	@;$i ;
[ ;1;2;o;-	;"	from;iÔ;."	from;	@o;0;["margin-o;-	;"to;iÕ;."to;	@;iÕ;	@;$i ;
[ ;1;2;o;,;"gutter;iÕ;&{ ;	@;'0;([o;-	;"context;iÕ;."context;	@u;/¿[o:Sass::Script::Operation
:
@linei×:@operand2o:Sass::Script::Variable	:
@name"legacy-support-for-ie7;i×:@underscored_name"legacy_support_for_ie7:@options{ :@operand1o;	;	"legacy-support-for-ie6;i×;
"legacy_support_for_ie6;@
;@
:@operator:or0[o:Sass::Tree::PropNode;	["#margin-o;	;	"	hack;iØ;
"	hack;@
;iØ;@
:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::String:
@type:identifier;@
;"	auto;'0;([[o;-;"context;."context;	@o;-	;"total-columns;iÎ;."total_columns;	@[o;-;"	from;."	from;	@o;-	;"from-direction;iÏ;."from_direction;	@o;
;;;iÜ;	@;
[ ;["6/* Shortcut to apply remove-omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $context   : [optional] The context (columns spanned by parent).
 * $from      : The start-direction for your document. */o;;"remove-nth-omega;iç;T;	@;
[o;;0;"ie;iè;o;,;"if;iè;&{ ;	@;'0;([o;6
;iè;7o;)	;;A;iè;	@;"
first;8o;-	;"n;iè;."n;	@;	@;=;Bo;;iè;	@;To;;iè;	@;F;	@;
[ o;%;"adjust-support-for;ié;&{"ie7o;-	;"ie;ié;."ie;	@"ie8o;-	;"ie;ié;."ie;	@"ie6o;-	;"ie;ié;."ie;	@;T;	@;
[o;;iê;T;	@;$i ;
[o;%;"remove-omega;iê;&{ ;	@;
[ ;'0;([o;-	;"context;iê;."context;	@o;-	;"	from;iê;."	from;	@;+["&:o;,;"format-nth;iê;&{ ;	@;'0;([o;-	;"n;iê;."n;	@o;-	;"selector;iê;."selector;	@;'0;([ ;'0;([	[o;-;"n;."n;	@o;)	;;*;iã;	@;"	last[o;-;"selector;."selector;	@o;)	;;*;iä;	@;"
child[o;-;"context;."context;	@o;-	;"total-columns;iå;."total_columns;	@[o;-;"	from;."	from;	@o;-	;"from-direction;iæ;."from_direction;	@o;
;;;iî;	@;
[ ;["i/* ---------------------------------------------------------------------------
 * Change Settings */o;;"with-grid-settings;iö;T;	@;
[o;
;;;i÷;	@;
[ ;["#/* keep the defaults around */o;;0;"default-columns;iø;o;-	;"total-columns;iø;."total_columns;	@;	@;
[ o;;0;"default-width;iù;o;-	;"column-width;iù;."column_width;	@;	@;
[ o;;0;"default-gutter;iú;o;-	;"gutter-width;iú;."gutter_width;	@;	@;
[ o;;0;"default-padding;iû;o;-	;"grid-padding;iû;."grid_padding;	@;	@;
[ o;
;;;iý;	@;
[ ;["/* use the new settings */o;;0;"total-columns;iþ;o;-	;"columns;iþ;."columns;	@;	@;
[ o;;0;"column-width;iÿ;o;-	;"
width;iÿ;."
width;	@;	@;
[ o;;0;"gutter-width;i ;o;-	;"gutter;i ;."gutter;	@;	@;
[ o;;0;"grid-padding;i;o;-	;"padding;i;."padding;	@;	@;
[ o;
;;;i;	@;
[ ;["/* apply to contents */o:Sass::Tree::ContentNode;i;	@;
[ o;
;;;i;	@;
[ ;[""/* re-instate the defaults */o;;0;"total-columns;i;o;-	;"default-columns;i;."default_columns;	@;	@;
[ o;;0;"column-width;i;o;-	;"default-width;i;."default_width;	@;	@;
[ o;;0;"gutter-width;i	;o;-	;"default-gutter;i	;."default_gutter;	@;	@;
[ o;;0;"grid-padding;i
;o;-	;"default-padding;i
;."default_padding;	@;	@;
[ ;'0;([	[o;-;"columns;."columns;	@o;-	;"total-columns;iò;."total_columns;	@[o;-;"
width;."
width;	@o;-	;"column-width;ió;."column_width;	@[o;-;"gutter;."gutter;	@o;-	;"gutter-width;iô;."gutter_width;	@[o;-;"padding;."padding;	@o;-	;"grid-padding;iõ;."grid_padding;	@